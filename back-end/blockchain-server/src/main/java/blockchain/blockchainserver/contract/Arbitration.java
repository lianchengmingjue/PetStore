package org.fisco.bcos.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple1;
import org.fisco.bcos.web3j.tuples.generated.Tuple2;
import org.fisco.bcos.web3j.tuples.generated.Tuple5;
import org.fisco.bcos.web3j.tuples.generated.Tuple6;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;
import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class Arbitration extends Contract {
    public static final String[] BINARY_ARRAY = {"","","","","","0080fd5b614d8f85828601614b5b565b9250506020614da085828601614b33565b9150509250929050565b600080600080600060a08688031215614dc257600080fd5b600086013567ffffffffffffffff811115614ddc57600080fd5b614de888828901614b5b565b955050602086013567ffffffffffffffff811115614e0557600080fd5b614e1188828901614b5b565b945050604086013567ffffffffffffffff811115614e2e57600080fd5b614e3a88828901614b5b565b935050606086013567ffffffffffffffff811115614e5757600080fd5b614e6388828901614b5b565b925050608086013567ffffffffffffffff811115614e8057600080fd5b614e8c88828901614b5b565b9150509295509295909350565b6000614ea482615aed565b80845260208401935083602082028501614ebd85615ae0565b60005b84811015614ef6578383038852614ed8838351614f79565b9250614ee382615b0e565b9150602088019750600181019050614ec0565b508196508694505050505092915050565b614f1081615b97565b82525050565b614f1f81615ba9565b82525050565b614f2e81615b3b565b82525050565b614f3d81615bbb565b82525050565b6000614f4e82615b03565b808452614f62816020860160208601615bdc565b614f6b81615c0f565b602085010191505092915050565b6000614f8482615af8565b808452614f98816020860160208601615bdc565b614fa181615c0f565b602085010191505092915050565b6000600182527f30000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600382527f6b657900000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600b82527f6465736372697074696f6e0000000000000000000000000000000000000000006020830152604082019050919050565b6000600582527f70726963650000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600d82527f745f6172626974726174696f6e000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f7065745f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000601082527f6172626974726174696f6e5f74696d65000000000000000000000000000000006020830152604082019050919050565b6000600982527f745f6163636f756e7400000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f6f6e5f73656c6c000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f2d310000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f636f6d706c6574650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f6172626974726174696f6e5f69640000000000000000000000000000000000006020830152604082019050919050565b6000600782527f757365725f6964000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f62757965725f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f7472616e73616374696f6e5f69640000000000000000000000000000000000006020830152604082019050919050565b6000600982527f73656c6c65725f696400000000000000000000000000000000000000000000006020830152604082019050919050565b6000808252602082019050919050565b6000600d82527f745f7472616e73616374696f6e000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f2b310000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f62616c616e6365000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600582527f745f7065740000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060c08201905081810360008301526154258189614e99565b905081810360208301526154398188614e99565b9050818103604083015261544d8187614e99565b905081810360608301526154618186614e99565b905081810360808301526154758185614e99565b905081810360a08301526154898184614e99565b9050979650505050505050565b60006020820190506154ab6000830184614f25565b92915050565b60006020820190506154c66000830184614f34565b92915050565b600060408201905081810360008301526154e68185614f43565b90506154f56020830184614f07565b9392505050565b600060608201905081810360008301526155168186614f43565b90506155256020830185614f16565b6155326040830184614f07565b949350505050565b6000604082019050818103600083015261555381614fe6565b90506155626020830184614f07565b92915050565b6000606082019050818103600083015261558181614fe6565b90506155906020830185614f16565b61559d6040830184614f07565b9392505050565b600060408201905081810360008301526155bd81614fe6565b905081810360208301526155d08161531f565b9050919050565b600060208201905081810360008301526155f08161501d565b9050919050565b600060408201905081810360008301526156108161501d565b905081810360208301526156248184614f43565b905092915050565b6000602082019050818103600083015261564581615054565b9050919050565b600060208201905081810360008301526156658161508b565b9050919050565b60006020820190508181036000830152615685816150c2565b9050919050565b600060408201905081810360008301526156a5816150c2565b905081810360208301526156b98184614f43565b905092915050565b600060208201905081810360008301526156da816150f9565b9050919050565b600060408201905081810360008301526156fa816150f9565b9050818103602083015261570e8184614f43565b905092915050565b6000602082019050818103600083015261572f81615130565b9050919050565b6000604082019050818103600083015261574f81615167565b9050818103602083015261576281614faf565b9050919050565b60006020820190508181036000830152615782816151d5565b9050919050565b600060408201905081810360008301526157a2816151d5565b905081810360208301526157b581614faf565b9050919050565b600060408201905081810360008301526157d5816151d5565b905081810360208301526157e88161519e565b9050919050565b60006040820190508181036000830152615808816151d5565b9050818103602083015261581b81615366565b9050919050565b6000602082019050818103600083015261583b8161520c565b9050919050565b6000604082019050818103600083015261585b8161520c565b9050818103602083015261586f8184614f43565b905092915050565b6000602082019050818103600083015261589081615243565b9050919050565b600060408201905081810360008301526158b081615243565b905081810360208301526158c48184614f43565b905092915050565b600060208201905081810360008301526158e58161527a565b9050919050565b60006020820190508181036000830152615905816152b1565b9050919050565b60006040820190508181036000830152615925816152b1565b905081810360208301526159398184614f43565b905092915050565b6000602082019050818103600083015261595a816152e8565b9050919050565b6000604082019050818103600083015261597a8161531f565b90506159896020830184614f07565b92915050565b600060408201905081810360008301526159a88161531f565b90506159b76020830184614f16565b92915050565b600060608201905081810360008301526159d68161531f565b90506159e56020830185614f16565b6159f26040830184614f07565b9392505050565b60006020820190508181036000830152615a128161532f565b9050919050565b60006020820190508181036000830152615a328161539d565b9050919050565b60006040820190508181036000830152615a528161539d565b9050615a616020830184614f25565b92915050565b60006020820190508181036000830152615a80816153d4565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715615aaa57600080fd5b8060405250919050565b600067ffffffffffffffff821115615acb57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000615b5082615b1b565b9050919050565b6000615b6282615b1b565b9050919050565b6000615b7482615b1b565b9050919050565b6000615b8682615b1b565b9050919050565b6000819050919050565b6000615ba282615b1b565b9050919050565b6000615bb482615b1b565b9050919050565b6000615bc682615b3b565b9050919050565b82818337600083830152505050565b60005b83811015615bfa578082015181840152602081019050615bdf565b83811115615c09576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820fdf1add7087d0745d7dc99a6816db19a8088c5f8fd2f2f4992dbb58a83f08ea96c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"a_id\",\"type\":\"string\"},{\"name\":\"t_id\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"string\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"u_id\",\"type\":\"string\"}],\"name\":\"request\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a_id\",\"type\":\"string\"},{\"name\":\"flag\",\"type\":\"int256\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allArbitrations\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"select\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"from_account\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"to_account\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ArbitrationEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);

    public static final String FUNC_REQUEST = "request";

    public static final String FUNC_VERIFY = "verify";

    public static final String FUNC_ALLARBITRATIONS = "allArbitrations";

    public static final String FUNC_SELECT = "select";

    public static final Event ARBITRATIONEVENT_EVENT = new Event("ArbitrationEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected Arbitration(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Arbitration(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Arbitration(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Arbitration(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static TransactionDecoder getTransactionDecoder() {
        return transactionDecoder;
    }

    public RemoteCall<TransactionReceipt> request(String a_id, String t_id, String time, String desc, String u_id) {
        final Function function = new Function(
                FUNC_REQUEST, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(a_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(t_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(desc), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(u_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void request(String a_id, String t_id, String time, String desc, String u_id, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_REQUEST, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(a_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(t_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(desc), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(u_id)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String requestSeq(String a_id, String t_id, String time, String desc, String u_id) {
        final Function function = new Function(
                FUNC_REQUEST, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(a_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(t_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(desc), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(u_id)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple5<String, String, String, String, String> getRequestInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REQUEST, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple5<String, String, String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue()
                );
    }

    public Tuple1<BigInteger> getRequestOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REQUEST, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public RemoteCall<TransactionReceipt> verify(String a_id, BigInteger flag) {
        final Function function = new Function(
                FUNC_VERIFY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(a_id), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(flag)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void verify(String a_id, BigInteger flag, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_VERIFY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(a_id), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(flag)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String verifySeq(String a_id, BigInteger flag) {
        final Function function = new Function(
                FUNC_VERIFY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(a_id), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(flag)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple2<String, BigInteger> getVerifyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_VERIFY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getVerifyOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_VERIFY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public RemoteCall<Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>> allArbitrations() {
        final Function function = new Function(FUNC_ALLARBITRATIONS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteCall<Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>>(
                new Callable<Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>>() {
                    @Override
                    public Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                                convertToNative((List<Utf8String>) results.get(1).getValue()), 
                                convertToNative((List<Utf8String>) results.get(2).getValue()), 
                                convertToNative((List<Utf8String>) results.get(3).getValue()), 
                                convertToNative((List<Utf8String>) results.get(4).getValue()), 
                                convertToNative((List<Utf8String>) results.get(5).getValue()));
                    }
                });
    }

    public RemoteCall<Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>> select(String id) {
        final Function function = new Function(FUNC_SELECT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteCall<Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>>(
                new Callable<Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>>() {
                    @Override
                    public Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<List<String>, List<String>, List<String>, List<String>, List<String>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                                convertToNative((List<Utf8String>) results.get(1).getValue()), 
                                convertToNative((List<Utf8String>) results.get(2).getValue()), 
                                convertToNative((List<Utf8String>) results.get(3).getValue()), 
                                convertToNative((List<Utf8String>) results.get(4).getValue()), 
                                convertToNative((List<Utf8String>) results.get(5).getValue()));
                    }
                });
    }

    public List<ArbitrationEventEventResponse> getArbitrationEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ARBITRATIONEVENT_EVENT, transactionReceipt);
        ArrayList<ArbitrationEventEventResponse> responses = new ArrayList<ArbitrationEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ArbitrationEventEventResponse typedResponse = new ArbitrationEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.from_account = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.to_account = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void registerArbitrationEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(ARBITRATIONEVENT_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);
    }

    public void registerArbitrationEventEventLogFilter(EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(ARBITRATIONEVENT_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,callback);
    }

    @Deprecated
    public static Arbitration load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Arbitration(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Arbitration load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Arbitration(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Arbitration load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Arbitration(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Arbitration load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Arbitration(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Arbitration> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Arbitration.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Arbitration> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Arbitration.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Arbitration> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Arbitration.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Arbitration> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Arbitration.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class ArbitrationEventEventResponse {
        public Log log;

        public BigInteger ret;

        public String from_account;

        public String to_account;

        public BigInteger amount;
    }
}
